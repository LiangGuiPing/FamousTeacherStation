<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ftw.dao.adm.AdmSystemLogsDAO">
  <resultMap id="BaseResultMap" type="com.ftw.entity.adm.AdmSystemLogs">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="logsTypeId" jdbcType="INTEGER" property="logstypeid" />
    <result column="operation" jdbcType="VARCHAR" property="operation" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, logsTypeId, operation, createTime, ip, creator
  </sql>
  <select id="selectByExample" parameterType="com.ftw.entity.adm.AdmSystemLogsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from adm_system_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from adm_system_logs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from adm_system_logs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ftw.entity.adm.AdmSystemLogsExample">
    delete from adm_system_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ftw.entity.adm.AdmSystemLogs">
    insert into adm_system_logs (id, logsTypeId, operation, 
      createTime, ip, creator
      )
    values (#{id,jdbcType=INTEGER}, #{logstypeid,jdbcType=INTEGER}, #{operation,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ftw.entity.adm.AdmSystemLogs">
    insert into adm_system_logs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="logstypeid != null">
        logsTypeId,
      </if>
      <if test="operation != null">
        operation,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="creator != null">
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="logstypeid != null">
        #{logstypeid,jdbcType=INTEGER},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ftw.entity.adm.AdmSystemLogsExample" resultType="java.lang.Long">
    select count(*) from adm_system_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update adm_system_logs
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.logstypeid != null">
        logsTypeId = #{record.logstypeid,jdbcType=INTEGER},
      </if>
      <if test="record.operation != null">
        operation = #{record.operation,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update adm_system_logs
    set id = #{record.id,jdbcType=INTEGER},
      logsTypeId = #{record.logstypeid,jdbcType=INTEGER},
      operation = #{record.operation,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ftw.entity.adm.AdmSystemLogs">
    update adm_system_logs
    <set>
      <if test="logstypeid != null">
        logsTypeId = #{logstypeid,jdbcType=INTEGER},
      </if>
      <if test="operation != null">
        operation = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ftw.entity.adm.AdmSystemLogs">
    update adm_system_logs
    set logsTypeId = #{logstypeid,jdbcType=INTEGER},
      operation = #{operation,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>