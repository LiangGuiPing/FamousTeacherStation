<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ftw.dao.adm.AdmUsersModulesDAO">
  <resultMap id="BaseResultMap" type="com.ftw.entity.adm.AdmUsersModules">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="moduleId" jdbcType="INTEGER" property="moduleid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, moduleId
  </sql>
  <select id="selectByExample" parameterType="com.ftw.entity.adm.AdmUsersModulesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from adm_users_modules
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from adm_users_modules
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from adm_users_modules
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ftw.entity.adm.AdmUsersModulesExample">
    delete from adm_users_modules
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ftw.entity.adm.AdmUsersModules">
    insert into adm_users_modules (id, userId, moduleId
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{moduleid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ftw.entity.adm.AdmUsersModules">
    insert into adm_users_modules
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="moduleid != null">
        moduleId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="moduleid != null">
        #{moduleid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ftw.entity.adm.AdmUsersModulesExample" resultType="java.lang.Long">
    select count(*) from adm_users_modules
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update adm_users_modules
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.moduleid != null">
        moduleId = #{record.moduleid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update adm_users_modules
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      moduleId = #{record.moduleid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ftw.entity.adm.AdmUsersModules">
    update adm_users_modules
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="moduleid != null">
        moduleId = #{moduleid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ftw.entity.adm.AdmUsersModules">
    update adm_users_modules
    set userId = #{userid,jdbcType=INTEGER},
      moduleId = #{moduleid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getAllModules" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT tt.*,
       IF(tt.parentId IS NOT null, (SELECT s.moduleName FROM adm_modules s WHERE s.id = tt.parentId LIMIT 1), NULL) AS parentModuleName 
	FROM
	(
	
	SELECT m.id AS moduleId,
				 m.moduleName,
				 m.visitUrl,
				 m.createTime,
				 m.parentId
	FROM adm_modules m
	) tt
    <if test="moduleName != null">
	WHERE tt.moduleName LIKE '%${moduleName}%'
	</if>
	ORDER BY tt.moduleId DESC
    LIMIT #{pageStart}, #{pageSize}
  </select>
  
  <select id="getAllModulesSize" parameterType="java.util.Map" resultType="java.lang.Integer">
	SELECT COUNT(*)
	FROM
	(
		SELECT m.id AS moduleId,
			 m.moduleName,
			 m.visitUrl,
			 m.createTime,
			 m.parentId
	FROM adm_modules m
	) tt
    <if test="moduleName != null">
	WHERE tt.moduleName LIKE '%${moduleName}%'
	</if>
  </select>
  
  <select id="fetchModules" parameterType="java.util.Map" resultType="java.util.HashMap">
  	SELECT m.id AS moduleId,
		   m.moduleName,
		   IF(m.parentId IS NULL, '', m.parentId) AS parentId
	FROM adm_modules m
  </select>
  
  <select id="getParentModuleByUser" parameterType="java.util.Map" resultType="java.util.HashMap">
	SELECT um.userId,
	       um.moduleId,
	       m.moduleName
	FROM adm_users_modules um
	LEFT JOIN adm_modules m ON m.id = um.moduleId
	WHERE um.userId = #{userId}
	AND m.parentId IS NULL
	ORDER BY m.displaySort ASC
  </select>
  
  <select id="getSubModuleByParentId" parameterType="java.util.Map" resultType="java.util.HashMap">
	SELECT m.id,
	       m.moduleName AS name,
	       m.visitUrl AS url
	FROM adm_modules m
	LEFT JOIN adm_users_modules um ON um.moduleId = m.id
	WHERE m.parentId = #{parentId}
	AND um.userId = #{userId}
	AND m.isDisplay = 1
	ORDER BY m.displaySort ASC
  </select>
  
  <select id="getAllParentModules" parameterType="java.util.Map" resultType="java.util.HashMap">
	SELECT m.id,
	       m.moduleName
	FROM adm_modules m
    WHERE m.parentId IS NULL
	ORDER BY m.displaySort ASC
  </select>
  
  <select id="getsecondModulesByParentId" parameterType="java.util.Map" resultType="java.util.HashMap">
	SELECT m.id,
	       m.moduleName
	FROM adm_modules m
    WHERE m.parentId = #{parentId}
	ORDER BY m.displaySort ASC
  </select>
  
  <select id="deleteModuleByModuleIdAndUserId" parameterType="java.util.Map" resultType="java.lang.Integer">
	DELETE FROM adm_users_modules WHERE moduleId = #{moduleId} AND userId = #{userId}
  </select>
  
  <!-- 根据用户ID删除该用户所有模块 -->
  <delete id="deleteUserAllModuleByUserId" parameterType="java.util.Map">
  	DELETE FROM adm_users_modules WHERE userId = #{userId}
  </delete>
  
  <!-- 批量插入 -->
  <insert id="insertByBatch" parameterType="java.util.List">
        insert into adm_users_modules (userId, moduleId)
        values
        <foreach collection="items" item="item" index="index" separator=",">
            (#{item.userid,jdbcType=INTEGER},#{item.moduleid,jdbcType=INTEGER})
        </foreach>
    </insert>
  
</mapper>